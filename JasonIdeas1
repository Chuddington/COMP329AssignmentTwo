Looked at lecture 19 and 20. Lecture 22 contains information
about communicating between robots then 23 has the interfacing
stuff.

Lec 19 slide 16 onwards gave me this
sort of sample/idea code:

/* For going towards a victim.
 */
+victim(Red)
	: ...
	<-	?location(Red, Coordinates);	//this could get coordinates from leJOS
		!at(Coordinates);
		
+!at(Coordinates)
	: 	not at(Coordinates)
		& ~ unsafe_path(Coordinates)
	<-	move_towards(Coordinates);		//move_towards could make the call goTo(int x, int y)
		!at(Coordinates)

//---------------------------------------------//

	
/* Simple code that creates agents and shit.
 */

	infrastructure: Centralised
	
	environment:
		MapSystem				//I think this would be correct
	
	agents:
		agent1 doctor;
		agent2 scout;
		
	aslSourcePath:
		"src/asl";		//dunno what really goes here

//---------------------------------------------//
	

/* Code from the lecture slide. Slots are something like
 * grid squares/cells. r1 is an agent.
 */		
		
	/* Initial goal */
		!check(slots).
		
	/* Plans */
	// Step through the gridworld and then stop
	//
	// To achieve the goal !check(slots): if the robot
	// isn't at the end of the world, move to the next
	// slot, then reset the goal !check(slots)
		+!check(slots) : 
			not pos(r1,6,6)
		<- 	next(slot);
			!check(slots).
	// Achieve the goal !check(slots) without doing
	// anything.
		+!check(slots)

//---------------------------------------------//

	
/* Possible code to move about and
 * pass information to the doctor.
 */
		!check(slots):
		+!check(slots) :			//prevents recursive call if robot at end of grid
			not victim(scout)
			& pos(scout, //last x coord, //last y coord).
		
		+!check(slots) : 
				not victim(scout)
			<- 	next(slot);
				!check(slots).
		+!check(slots).
	
		+victim(scout) : 
			true
		<-	.print("Found Victim!");		//"." prefix means internal action
			//communicate to doctor

//---------------------------------------------//
